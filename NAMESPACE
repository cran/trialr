# exportPattern("^[[:alpha:]]+")
# Dose-finding
export(df_parse_outcomes)
# CRM
export(stan_crm)
export(crm_params)
export(crm_fit)
export(crm_process)
# export(print.crm_fit)
S3method(print, crm_fit)
#export(as.data.frame.crm_fit)
S3method(as.data.frame, crm_fit)
#export(plot.crm_fit)
S3method(plot, crm_fit)
#export(summary.crm_fit)
S3method(summary, crm_fit)
export(gather_samples.crm_fit)
# EffTox
export(efftox_analysis_to_df)
export(efftox_contour_plot)
export(efftox_dtps)
export(efftox_fit)
export(efftox_get_tox)
export(efftox_params)
export(efftox_parameters_demo)
export(efftox_process)
export(efftox_simulate)
export(efftox_superiority)
export(efftox_solve_p)
export(efftox_utility)
export(efftox_utility_density_plot)
export(efftox_parse_outcomes)
# export(as.data.frame.efftox_fit)
S3method(as.data.frame, efftox_fit)
# export(plot.efftox_fit)
S3method(plot, efftox_fit)
# export(print.efftox_fit)
S3method(print, efftox_fit)
export(gather_samples.efftox_fit)
export(stan_efftox)
export(stan_efftox_demo)
# P2TNE in PEPS2
export(peps2_get_data)
export(peps2_process)
export(peps2_run_sims)
# Aux
export(ranBin2)
# Thall hierarchical
export(thallhierarchicalbinary_parameters_demo)

export(stan_files)
export(stanmodels)



useDynLib(trialr, .registration = TRUE)

import(Rcpp)
import(methods)
import(rstantools)
importFrom(magrittr, "%>%")
